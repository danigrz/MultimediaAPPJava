/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectosm;

import java.applet.Applet;
import java.applet.AudioClip;
import java.io.File;
import java.net.URL;
import javax.sound.sampled.LineEvent;
import javax.sound.sampled.LineListener;
import sm.sound.SMClipPlayer;
import sm.sound.SMPlayer;

/**
 * @author Daniel Guerra Ruiz
 * @version 16/6/2015
 * Clase VentanaInternaReproductor
 * Contiene un reprouctor de audio.
 * 
 */
public class VentanaInternaReproductor extends javax.swing.JInternalFrame {

    /**
     * Constructor sin parámetros
     */
    public VentanaInternaReproductor() {
          initComponents();
       super.closable=true;
       super.resizable=true;
       super.maximizable=true;
       super.iconable=true;
   }
   
    SMPlayer player;
    
    /**
     * Constructor con parámetros.
     * Reproduce el fichero pasado por parámetro de tipo File
     * @param f File
     */
    
    public VentanaInternaReproductor(File f) {
        initComponents();
        player = new SMClipPlayer(f);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botonPlay = new javax.swing.JToggleButton();
        botonStop = new javax.swing.JToggleButton();

        setClosable(true);
        setMaximumSize(null);
        setMinimumSize(new java.awt.Dimension(237, 100));
        setPreferredSize(new java.awt.Dimension(237, 100));
        getContentPane().setLayout(new java.awt.FlowLayout());

        botonPlay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectosm/iconosSonido/play24x24.png"))); // NOI18N
        botonPlay.setText("Play");
        botonPlay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonPlayActionPerformed(evt);
            }
        });
        getContentPane().add(botonPlay);

        botonStop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectosm/iconosSonido/stop24x24.png"))); // NOI18N
        botonStop.setText("Stop");
        botonStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonStopActionPerformed(evt);
            }
        });
        getContentPane().add(botonStop);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    /**
     * Empieza la reproduccion.
     * @param evt 
     */
    private void botonPlayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonPlayActionPerformed
        // TODO add your handling code here:
        if(player!=null) player.play();
    }//GEN-LAST:event_botonPlayActionPerformed

    /**
     * Para la reproduccion.
     * @param evt 
     */
    
    private void botonStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonStopActionPerformed
        // TODO add your handling code here:
        if(player!=null) player.stop();
    }//GEN-LAST:event_botonStopActionPerformed

    
    
    
class ManejadorAudio implements LineListener {
        @Override
        public void update(LineEvent event) {
        if (event.getType() == LineEvent.Type.START) {
            
        //TODO
            
        }
        if (event.getType() == LineEvent.Type.STOP) {
        //TODO
        }
        if (event.getType() == LineEvent.Type.CLOSE) {
        //TODO
        }
        }
 

    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton botonPlay;
    private javax.swing.JToggleButton botonStop;
    // End of variables declaration//GEN-END:variables
}
