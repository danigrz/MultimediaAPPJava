/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectosm;

import java.awt.Component;
import java.awt.Image;
import java.util.List;
import java.awt.image.BufferedImage;
import java.io.File;
import java.util.ArrayList;
import java.util.Vector;
import javax.media.Buffer;
import javax.media.CaptureDeviceInfo;
import javax.media.CaptureDeviceManager;
import javax.media.Manager;
import javax.media.MediaLocator;
import javax.media.Player;
import javax.media.control.FrameGrabbingControl;
import javax.media.format.VideoFormat;
import javax.media.format.YUVFormat;
import javax.media.util.BufferToImage;

/**
 * @author Daniel Guerra Ruiz
 * @version 16/6/2015
 * Clase VentanaInternaWebCam
 * Abre la webcam por defecto.
 */
public class VentanaInternaWebCam extends javax.swing.JInternalFrame {

    /**
     * Constructor sin par√°metros.
     * Selecciona el dispositivo por defecto de webcam.
     */
    
    private Player player = null;
     
    public VentanaInternaWebCam() {
       initComponents();
       super.closable=true;
       super.resizable=true;
       super.maximizable=true;
       super.iconable=true;
       
       try { 
        CaptureDeviceInfo deviceInfo;
        List<CaptureDeviceInfo> deviceList  = CaptureDeviceManager.getDeviceList(new YUVFormat());
        deviceInfo = deviceList.get(0);
        MediaLocator ml = deviceInfo.getLocator();
        Player p = Manager.createRealizedPlayer(ml);
        Component areaVisual = p.getVisualComponent();
        if(areaVisual!=null) 
            this.add(areaVisual); 
        Component panelControl = p.getControlPanelComponent();
        if(panelControl!=null) 
            this.add(panelControl); 
        p.start();
        } catch(Exception e) { System.out.println(e);} 

    }    

    /**
     * Metodo getMiPlayer
     * Devuelve el player para usar el metodo getFrame() en la clase VentanaPrincipal
     * @see VentanaPrincipal
     * @return Player
     */
    
    public Player getMiPlayer() {
        return player;
    }

    
   
    /**
     * Metodo getInstance, no se puede crear mas de una ventana VentanaInternaWebCam.
     * @return VentanaInternaWebCam
     */

    public static VentanaInternaWebCam getInstance(){
        VentanaInternaWebCam v = new VentanaInternaWebCam();
        if(v.player!=null) return v;
        else return null;
    }
    
    
    /**
     * Metodo Stop para parar la Webcam
     */
    public void stop() {
        if (player != null) {
            try {
            player.close();
            } catch (Exception e) {
            System.err.println("VentanaInternaJMFPlayer: "+e);
            }
        } 
    } 
    
    

    
    
    
    
    
    
  

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        // TODO add your handling code here:
        stop();
    }//GEN-LAST:event_formInternalFrameClosing


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
