/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectosm;

import java.awt.Cursor;
import java.applet.AudioClip;
import java.awt.AlphaComposite;
import java.awt.BasicStroke;
import java.awt.Color;
import static java.awt.Cursor.getPredefinedCursor;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Point;
import java.awt.TexturePaint;
import java.awt.color.ColorSpace;
import java.awt.color.ICC_Profile;
import java.awt.geom.AffineTransform;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.awt.image.ByteLookupTable;
import java.awt.image.ConvolveOp;
import java.awt.image.ImageProducer;
import java.awt.image.Kernel;
import java.awt.image.LookupOp;
import java.awt.image.LookupTable;
import java.awt.image.RescaleOp;
import java.beans.PropertyVetoException;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.media.Buffer;
import javax.media.Player;
import javax.media.control.FrameGrabbingControl;
import javax.media.format.VideoFormat;
import javax.media.util.BufferToImage;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import sm.dgr.image.SenoLookupTableProducer;
import sm.dgr.iu.Lienzo2DImagen;
import sm.image.KernelProducer;
import sm.image.LookupTableProducer;



/**
 * @author Daniel Guerra Ruiz
 * @version 16/6/2015
 * Clase VentanaPrincipal.
 * Contiene el entorno gráfico del programa, tanto los botones como sus acciones.
 */
public class VentanaPrincipal extends javax.swing.JFrame {


    BufferedImage imgSource;
    BufferedImage imgdest;
    private int imgAlto = 300;
    private int imgAncho = 300;
    boolean error;
    private Object RenderingHints;
    
    /**
     * Constructor sin parámetros
     */
    
    public VentanaPrincipal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoColores = new javax.swing.ButtonGroup();
        grupoHerramientas = new javax.swing.ButtonGroup();
        grupoGiros = new javax.swing.ButtonGroup();
        grupoTipoLinea = new javax.swing.ButtonGroup();
        dialogoResize = new javax.swing.JDialog();
        jLabel13 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jToggleButton7 = new javax.swing.JToggleButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jSeparator21 = new javax.swing.JSeparator();
        jLabel16 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        LabelEstado = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        panelHerramientas = new javax.swing.JPanel();
        botonNuevaImagen = new javax.swing.JButton();
        botonAbrir = new javax.swing.JButton();
        botonGuardar = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        botonPunto = new javax.swing.JToggleButton();
        botonLinea = new javax.swing.JToggleButton();
        botonRectangulo = new javax.swing.JToggleButton();
        jToggleButton2 = new javax.swing.JToggleButton();
        botonCirculo = new javax.swing.JToggleButton();
        botonLineaCurva = new javax.swing.JToggleButton();
        jToggleButton5 = new javax.swing.JToggleButton();
        jToggleButton6 = new javax.swing.JToggleButton();
        botonGoma = new javax.swing.JToggleButton();
        jSeparator12 = new javax.swing.JSeparator();
        jLabel9 = new javax.swing.JLabel();
        SpinnerGrosor = new javax.swing.JSpinner();
        jToggleButton4 = new javax.swing.JToggleButton();
        jToggleButton1 = new javax.swing.JToggleButton();
        jToggleButton3 = new javax.swing.JToggleButton();
        jSeparator8 = new javax.swing.JSeparator();
        botonNegro = new javax.swing.JToggleButton();
        botonBlanco = new javax.swing.JToggleButton();
        botonRojo = new javax.swing.JToggleButton();
        botonAmarillo = new javax.swing.JToggleButton();
        botonAzul = new javax.swing.JToggleButton();
        botonVerde = new javax.swing.JToggleButton();
        botonRosa = new javax.swing.JToggleButton();
        jSeparator16 = new javax.swing.JSeparator();
        botonSelectorColores = new javax.swing.JToggleButton();
        jSeparator18 = new javax.swing.JSeparator();
        botonRelleno = new javax.swing.JToggleButton();
        botonTextura = new javax.swing.JToggleButton();
        jSeparator19 = new javax.swing.JSeparator();
        jSeparator20 = new javax.swing.JSeparator();
        botonGradiente = new javax.swing.JToggleButton();
        botonAnguloGrad = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();
        botonSelectorColores1 = new javax.swing.JToggleButton();
        jLabel10 = new javax.swing.JLabel();
        botonSelectorColores2 = new javax.swing.JToggleButton();
        jSeparator17 = new javax.swing.JSeparator();
        jLabel12 = new javax.swing.JLabel();
        sliderTransparencia = new javax.swing.JSlider();
        jLabel11 = new javax.swing.JLabel();
        jSeparator13 = new javax.swing.JSeparator();
        botonAlisado = new javax.swing.JToggleButton();
        jSeparator15 = new javax.swing.JSeparator();
        botonMover = new javax.swing.JToggleButton();
        jSeparator14 = new javax.swing.JSeparator();
        botonGetFrame = new javax.swing.JButton();
        botonCopiarImagen = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        panelBarraHerramientas = new javax.swing.JPanel();
        LabelBrillo = new javax.swing.JLabel();
        sliderBrillo = new javax.swing.JSlider();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator10 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        comboBoxFiltros = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        botonContraste = new javax.swing.JToggleButton();
        botonContrasteConIlum = new javax.swing.JToggleButton();
        botonContrasteConOscur = new javax.swing.JToggleButton();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        botonFSeno = new javax.swing.JToggleButton();
        jSeparator9 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        sliderRotacion = new javax.swing.JSlider();
        botonRotar90 = new javax.swing.JToggleButton();
        botonRotar180 = new javax.swing.JToggleButton();
        botonRotar270 = new javax.swing.JToggleButton();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator11 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        botonAumentarEscala = new javax.swing.JToggleButton();
        botonReducirEscala = new javax.swing.JToggleButton();
        jSeparator6 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        sliderUmbral = new javax.swing.JSlider();
        jSeparator7 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        jToggleButton14 = new javax.swing.JToggleButton();
        jToggleButton15 = new javax.swing.JToggleButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        escritorio = new javax.swing.JDesktopPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuArchivo = new javax.swing.JMenu();
        menuNuevaImagen = new javax.swing.JMenuItem();
        menuAbrir = new javax.swing.JMenuItem();
        menuGuardar = new javax.swing.JMenuItem();
        menuGrabarAudio = new javax.swing.JMenuItem();
        menuAbrirWebcam = new javax.swing.JMenuItem();
        menuVer = new javax.swing.JMenu();
        menuEstados = new javax.swing.JMenuItem();
        menuVerBarraHerramientas = new javax.swing.JMenuItem();
        menuHerramientasGraficas = new javax.swing.JMenuItem();
        menuModoCine = new javax.swing.JMenuItem();
        menuImagen = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();

        dialogoResize.setMinimumSize(new java.awt.Dimension(330, 140));
        dialogoResize.setResizable(false);

        jLabel13.setText("Introduce el tamaño de la imagen en px.");
        dialogoResize.getContentPane().add(jLabel13, java.awt.BorderLayout.PAGE_START);

        jPanel6.setLayout(new java.awt.BorderLayout());

        jToggleButton7.setText("Enviar");
        jToggleButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton7ActionPerformed(evt);
            }
        });
        jPanel6.add(jToggleButton7, java.awt.BorderLayout.PAGE_END);

        jPanel7.setLayout(new javax.swing.BoxLayout(jPanel7, javax.swing.BoxLayout.LINE_AXIS));

        jLabel14.setText("Alto:");
        jPanel7.add(jLabel14);

        jTextField1.setText("0");
        jTextField1.setMaximumSize(new java.awt.Dimension(45, 30));
        jTextField1.setMinimumSize(new java.awt.Dimension(45, 30));
        jTextField1.setPreferredSize(new java.awt.Dimension(45, 30));
        jPanel7.add(jTextField1);

        jSeparator21.setMaximumSize(new java.awt.Dimension(5, 10));
        jSeparator21.setMinimumSize(new java.awt.Dimension(5, 10));
        jSeparator21.setPreferredSize(new java.awt.Dimension(5, 10));
        jPanel7.add(jSeparator21);

        jLabel16.setText("Ancho:");
        jPanel7.add(jLabel16);

        jTextField2.setText("0");
        jTextField2.setMaximumSize(new java.awt.Dimension(45, 30));
        jTextField2.setMinimumSize(new java.awt.Dimension(45, 30));
        jTextField2.setPreferredSize(new java.awt.Dimension(45, 30));
        jPanel7.add(jTextField2);

        jPanel6.add(jPanel7, java.awt.BorderLayout.CENTER);

        dialogoResize.getContentPane().add(jPanel6, java.awt.BorderLayout.CENTER);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Proyecto Sistemas Multimedia - Daniel Guerra Ruiz 2015 - Universidad de Granada");
        setMaximumSize(new java.awt.Dimension(950, 2147483647));
        setMinimumSize(new java.awt.Dimension(1250, 700));
        setPreferredSize(new java.awt.Dimension(1250, 700));

        LabelEstado.setText("Estado");
        getContentPane().add(LabelEstado, java.awt.BorderLayout.PAGE_END);

        jPanel3.setLayout(new java.awt.BorderLayout());

        panelHerramientas.setMaximumSize(new java.awt.Dimension(1000, 32767));
        panelHerramientas.setMinimumSize(new java.awt.Dimension(1000, 90));
        panelHerramientas.setPreferredSize(new java.awt.Dimension(1000, 90));
        panelHerramientas.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        botonNuevaImagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectosm/iconos/nuevo.png"))); // NOI18N
        botonNuevaImagen.setToolTipText("Crear fichero de imagen");
        botonNuevaImagen.setMaximumSize(new java.awt.Dimension(50, 30));
        botonNuevaImagen.setMinimumSize(new java.awt.Dimension(50, 30));
        botonNuevaImagen.setPreferredSize(new java.awt.Dimension(50, 30));
        botonNuevaImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonNuevaImagenActionPerformed(evt);
            }
        });
        panelHerramientas.add(botonNuevaImagen);

        botonAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectosm/iconos/abrir.png"))); // NOI18N
        botonAbrir.setToolTipText("Abrir nuevo archivo, puede ser video audio o imagen");
        botonAbrir.setMaximumSize(new java.awt.Dimension(50, 30));
        botonAbrir.setMinimumSize(new java.awt.Dimension(50, 30));
        botonAbrir.setPreferredSize(new java.awt.Dimension(50, 30));
        botonAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAbrirActionPerformed(evt);
            }
        });
        panelHerramientas.add(botonAbrir);

        botonGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectosm/iconos/guardar.png"))); // NOI18N
        botonGuardar.setToolTipText("Guardar imagen");
        botonGuardar.setMaximumSize(new java.awt.Dimension(50, 30));
        botonGuardar.setMinimumSize(new java.awt.Dimension(50, 30));
        botonGuardar.setPreferredSize(new java.awt.Dimension(50, 30));
        botonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGuardarActionPerformed(evt);
            }
        });
        panelHerramientas.add(botonGuardar);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator1.setPreferredSize(new java.awt.Dimension(3, 27));
        panelHerramientas.add(jSeparator1);

        grupoHerramientas.add(botonPunto);
        botonPunto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectosm/iconos/punto.png"))); // NOI18N
        botonPunto.setSelected(true);
        botonPunto.setToolTipText("Punto");
        botonPunto.setPreferredSize(new java.awt.Dimension(50, 30));
        botonPunto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonPuntoActionPerformed(evt);
            }
        });
        panelHerramientas.add(botonPunto);

        grupoHerramientas.add(botonLinea);
        botonLinea.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectosm/iconos/linea.png"))); // NOI18N
        botonLinea.setToolTipText("Linea");
        botonLinea.setMaximumSize(new java.awt.Dimension(50, 30));
        botonLinea.setMinimumSize(new java.awt.Dimension(50, 30));
        botonLinea.setPreferredSize(new java.awt.Dimension(50, 30));
        botonLinea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonLineaActionPerformed(evt);
            }
        });
        panelHerramientas.add(botonLinea);

        grupoHerramientas.add(botonRectangulo);
        botonRectangulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectosm/iconos/rectangulo.png"))); // NOI18N
        botonRectangulo.setToolTipText("Rectangulo");
        botonRectangulo.setMaximumSize(new java.awt.Dimension(50, 30));
        botonRectangulo.setMinimumSize(new java.awt.Dimension(50, 30));
        botonRectangulo.setPreferredSize(new java.awt.Dimension(50, 30));
        botonRectangulo.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                botonRectanguloStateChanged(evt);
            }
        });
        botonRectangulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRectanguloActionPerformed(evt);
            }
        });
        panelHerramientas.add(botonRectangulo);

        grupoHerramientas.add(jToggleButton2);
        jToggleButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectosm/iconos/rectanguloRedondeado.png"))); // NOI18N
        jToggleButton2.setToolTipText("Rectangulo redondeado");
        jToggleButton2.setMaximumSize(new java.awt.Dimension(50, 30));
        jToggleButton2.setMinimumSize(new java.awt.Dimension(50, 30));
        jToggleButton2.setPreferredSize(new java.awt.Dimension(50, 30));
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });
        panelHerramientas.add(jToggleButton2);

        grupoHerramientas.add(botonCirculo);
        botonCirculo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectosm/iconos/elipse.png"))); // NOI18N
        botonCirculo.setToolTipText("Círculo");
        botonCirculo.setPreferredSize(new java.awt.Dimension(50, 30));
        botonCirculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCirculoActionPerformed(evt);
            }
        });
        panelHerramientas.add(botonCirculo);

        grupoHerramientas.add(botonLineaCurva);
        botonLineaCurva.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectosm/iconos/arco.png"))); // NOI18N
        botonLineaCurva.setToolTipText("Punto de control manual en modo edición");
        botonLineaCurva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonLineaCurvaActionPerformed(evt);
            }
        });
        panelHerramientas.add(botonLineaCurva);

        grupoHerramientas.add(jToggleButton5);
        jToggleButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectosm/iconos/poligonoestrellado.png"))); // NOI18N
        jToggleButton5.setToolTipText("Poligono estrellado");
        jToggleButton5.setMaximumSize(new java.awt.Dimension(57, 33));
        jToggleButton5.setMinimumSize(new java.awt.Dimension(57, 33));
        jToggleButton5.setPreferredSize(new java.awt.Dimension(57, 33));
        jToggleButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton5ActionPerformed(evt);
            }
        });
        panelHerramientas.add(jToggleButton5);

        grupoHerramientas.add(jToggleButton6);
        jToggleButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectosm/iconos/lineasparalelas.png"))); // NOI18N
        jToggleButton6.setToolTipText("Lineas paralelas");
        jToggleButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton6ActionPerformed(evt);
            }
        });
        panelHerramientas.add(jToggleButton6);

        grupoHerramientas.add(botonGoma);
        botonGoma.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectosm/iconos/goma.png"))); // NOI18N
        botonGoma.setToolTipText("Goma");
        botonGoma.setPreferredSize(new java.awt.Dimension(50, 30));
        botonGoma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGomaActionPerformed(evt);
            }
        });
        panelHerramientas.add(botonGoma);

        jSeparator12.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator12.setPreferredSize(new java.awt.Dimension(3, 27));
        panelHerramientas.add(jSeparator12);

        jLabel9.setText("Grosor");
        panelHerramientas.add(jLabel9);

        SpinnerGrosor.setModel(new javax.swing.SpinnerNumberModel(0, 0, 150, 1));
        SpinnerGrosor.setToolTipText("Grosor del trazo");
        SpinnerGrosor.setMaximumSize(new java.awt.Dimension(50, 40));
        SpinnerGrosor.setMinimumSize(new java.awt.Dimension(50, 40));
        SpinnerGrosor.setPreferredSize(new java.awt.Dimension(50, 40));
        SpinnerGrosor.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SpinnerGrosorStateChanged(evt);
            }
        });
        panelHerramientas.add(SpinnerGrosor);

        grupoTipoLinea.add(jToggleButton4);
        jToggleButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectosm/iconos/trazonormal.png"))); // NOI18N
        jToggleButton4.setToolTipText("Trazo normal");
        jToggleButton4.setMaximumSize(new java.awt.Dimension(57, 35));
        jToggleButton4.setMinimumSize(new java.awt.Dimension(57, 35));
        jToggleButton4.setPreferredSize(new java.awt.Dimension(57, 35));
        jToggleButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton4ActionPerformed(evt);
            }
        });
        panelHerramientas.add(jToggleButton4);

        grupoTipoLinea.add(jToggleButton1);
        jToggleButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectosm/iconos/trazopunteado.png"))); // NOI18N
        jToggleButton1.setToolTipText("Trazo punteado");
        jToggleButton1.setMaximumSize(new java.awt.Dimension(57, 35));
        jToggleButton1.setMinimumSize(new java.awt.Dimension(57, 35));
        jToggleButton1.setPreferredSize(new java.awt.Dimension(57, 35));
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });
        panelHerramientas.add(jToggleButton1);

        grupoTipoLinea.add(jToggleButton3);
        jToggleButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectosm/iconos/trazodiscontinuo.png"))); // NOI18N
        jToggleButton3.setToolTipText("Trazo discontinuo");
        jToggleButton3.setMaximumSize(new java.awt.Dimension(57, 35));
        jToggleButton3.setMinimumSize(new java.awt.Dimension(57, 35));
        jToggleButton3.setPreferredSize(new java.awt.Dimension(57, 35));
        jToggleButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton3ActionPerformed(evt);
            }
        });
        panelHerramientas.add(jToggleButton3);

        jSeparator8.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator8.setPreferredSize(new java.awt.Dimension(5, 27));
        panelHerramientas.add(jSeparator8);

        botonNegro.setBackground(new java.awt.Color(0, 0, 0));
        grupoColores.add(botonNegro);
        botonNegro.setMaximumSize(new java.awt.Dimension(33, 33));
        botonNegro.setMinimumSize(new java.awt.Dimension(33, 33));
        botonNegro.setName(""); // NOI18N
        botonNegro.setPreferredSize(new java.awt.Dimension(33, 33));
        botonNegro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonNegroActionPerformed(evt);
            }
        });
        panelHerramientas.add(botonNegro);

        botonBlanco.setBackground(new java.awt.Color(255, 255, 255));
        grupoColores.add(botonBlanco);
        botonBlanco.setMaximumSize(new java.awt.Dimension(33, 33));
        botonBlanco.setMinimumSize(new java.awt.Dimension(33, 33));
        botonBlanco.setPreferredSize(new java.awt.Dimension(33, 33));
        botonBlanco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBlancoActionPerformed(evt);
            }
        });
        panelHerramientas.add(botonBlanco);

        botonRojo.setBackground(new java.awt.Color(255, 0, 0));
        grupoColores.add(botonRojo);
        botonRojo.setMaximumSize(new java.awt.Dimension(33, 33));
        botonRojo.setMinimumSize(new java.awt.Dimension(33, 33));
        botonRojo.setPreferredSize(new java.awt.Dimension(33, 33));
        botonRojo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRojoActionPerformed(evt);
            }
        });
        panelHerramientas.add(botonRojo);

        botonAmarillo.setBackground(new java.awt.Color(255, 255, 0));
        grupoColores.add(botonAmarillo);
        botonAmarillo.setMaximumSize(new java.awt.Dimension(33, 33));
        botonAmarillo.setMinimumSize(new java.awt.Dimension(33, 33));
        botonAmarillo.setPreferredSize(new java.awt.Dimension(33, 33));
        botonAmarillo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAmarilloActionPerformed(evt);
            }
        });
        panelHerramientas.add(botonAmarillo);

        botonAzul.setBackground(new java.awt.Color(0, 0, 255));
        grupoColores.add(botonAzul);
        botonAzul.setMaximumSize(new java.awt.Dimension(33, 33));
        botonAzul.setMinimumSize(new java.awt.Dimension(33, 33));
        botonAzul.setPreferredSize(new java.awt.Dimension(33, 33));
        botonAzul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAzulActionPerformed(evt);
            }
        });
        panelHerramientas.add(botonAzul);

        botonVerde.setBackground(new java.awt.Color(0, 255, 0));
        grupoColores.add(botonVerde);
        botonVerde.setMaximumSize(new java.awt.Dimension(33, 33));
        botonVerde.setMinimumSize(new java.awt.Dimension(33, 33));
        botonVerde.setPreferredSize(new java.awt.Dimension(33, 33));
        botonVerde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonVerdeActionPerformed(evt);
            }
        });
        panelHerramientas.add(botonVerde);

        botonRosa.setBackground(new java.awt.Color(255, 0, 153));
        grupoColores.add(botonRosa);
        botonRosa.setMaximumSize(new java.awt.Dimension(33, 33));
        botonRosa.setMinimumSize(new java.awt.Dimension(33, 33));
        botonRosa.setPreferredSize(new java.awt.Dimension(33, 33));
        botonRosa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRosaActionPerformed(evt);
            }
        });
        panelHerramientas.add(botonRosa);

        jSeparator16.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator16.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator16.setPreferredSize(new java.awt.Dimension(3, 27));
        panelHerramientas.add(jSeparator16);

        botonSelectorColores.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectosm/iconos/selector.png"))); // NOI18N
        botonSelectorColores.setToolTipText("Selector de color");
        botonSelectorColores.setMaximumSize(new java.awt.Dimension(50, 30));
        botonSelectorColores.setMinimumSize(new java.awt.Dimension(50, 30));
        botonSelectorColores.setPreferredSize(new java.awt.Dimension(50, 30));
        botonSelectorColores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSelectorColoresActionPerformed(evt);
            }
        });
        panelHerramientas.add(botonSelectorColores);

        jSeparator18.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator18.setMaximumSize(new java.awt.Dimension(3, 27));
        jSeparator18.setMinimumSize(new java.awt.Dimension(3, 27));
        jSeparator18.setPreferredSize(new java.awt.Dimension(3, 27));
        panelHerramientas.add(jSeparator18);

        botonRelleno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectosm/iconos/rellenar.png"))); // NOI18N
        botonRelleno.setToolTipText("Aplica relleno");
        botonRelleno.setMaximumSize(new java.awt.Dimension(50, 30));
        botonRelleno.setMinimumSize(new java.awt.Dimension(50, 30));
        botonRelleno.setPreferredSize(new java.awt.Dimension(50, 30));
        botonRelleno.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                botonRellenoStateChanged(evt);
            }
        });
        botonRelleno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRellenoActionPerformed(evt);
            }
        });
        panelHerramientas.add(botonRelleno);

        botonTextura.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectosm/iconos/textura.png"))); // NOI18N
        botonTextura.setToolTipText("Aplica una textura");
        botonTextura.setMaximumSize(new java.awt.Dimension(50, 30));
        botonTextura.setMinimumSize(new java.awt.Dimension(50, 30));
        botonTextura.setPreferredSize(new java.awt.Dimension(50, 30));
        botonTextura.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                botonTexturaStateChanged(evt);
            }
        });
        botonTextura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonTexturaActionPerformed(evt);
            }
        });
        panelHerramientas.add(botonTextura);
        panelHerramientas.add(jSeparator19);

        jSeparator20.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator20.setMaximumSize(new java.awt.Dimension(3, 27));
        jSeparator20.setMinimumSize(new java.awt.Dimension(3, 27));
        jSeparator20.setPreferredSize(new java.awt.Dimension(3, 27));
        panelHerramientas.add(jSeparator20);

        botonGradiente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectosm/iconos/gradiente.png"))); // NOI18N
        botonGradiente.setToolTipText("Aplica gradiente");
        botonGradiente.setMaximumSize(new java.awt.Dimension(50, 30));
        botonGradiente.setMinimumSize(new java.awt.Dimension(50, 30));
        botonGradiente.setPreferredSize(new java.awt.Dimension(50, 30));
        botonGradiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGradienteActionPerformed(evt);
            }
        });
        panelHerramientas.add(botonGradiente);

        botonAnguloGrad.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectosm/iconos/cruz.png"))); // NOI18N
        botonAnguloGrad.setToolTipText("Degradado horizontal o vertical");
        botonAnguloGrad.setMaximumSize(new java.awt.Dimension(50, 30));
        botonAnguloGrad.setMinimumSize(new java.awt.Dimension(50, 30));
        botonAnguloGrad.setPreferredSize(new java.awt.Dimension(50, 30));
        botonAnguloGrad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAnguloGradActionPerformed(evt);
            }
        });
        panelHerramientas.add(botonAnguloGrad);

        jLabel1.setText("Color uno:");
        panelHerramientas.add(jLabel1);

        botonSelectorColores1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectosm/iconos/selector.png"))); // NOI18N
        botonSelectorColores1.setToolTipText("Selector de color");
        botonSelectorColores1.setMaximumSize(new java.awt.Dimension(50, 30));
        botonSelectorColores1.setMinimumSize(new java.awt.Dimension(50, 30));
        botonSelectorColores1.setPreferredSize(new java.awt.Dimension(50, 30));
        botonSelectorColores1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSelectorColores1ActionPerformed(evt);
            }
        });
        panelHerramientas.add(botonSelectorColores1);

        jLabel10.setText("Color dos:");
        panelHerramientas.add(jLabel10);

        botonSelectorColores2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectosm/iconos/selector.png"))); // NOI18N
        botonSelectorColores2.setToolTipText("Color dos del degradado");
        botonSelectorColores2.setMaximumSize(new java.awt.Dimension(50, 30));
        botonSelectorColores2.setMinimumSize(new java.awt.Dimension(50, 30));
        botonSelectorColores2.setPreferredSize(new java.awt.Dimension(50, 30));
        botonSelectorColores2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSelectorColores2ActionPerformed(evt);
            }
        });
        panelHerramientas.add(botonSelectorColores2);

        jSeparator17.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator17.setMaximumSize(new java.awt.Dimension(3, 27));
        jSeparator17.setMinimumSize(new java.awt.Dimension(3, 27));
        jSeparator17.setPreferredSize(new java.awt.Dimension(3, 27));
        panelHerramientas.add(jSeparator17);

        jLabel12.setText("Transparencia");
        panelHerramientas.add(jLabel12);

        sliderTransparencia.setMaximum(10);
        sliderTransparencia.setInverted(true);
        sliderTransparencia.setPreferredSize(new java.awt.Dimension(90, 26));
        sliderTransparencia.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderTransparenciaStateChanged(evt);
            }
        });
        sliderTransparencia.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                sliderTransparenciaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                sliderTransparenciaFocusLost(evt);
            }
        });
        panelHerramientas.add(sliderTransparencia);

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectosm/iconos/transparencia.png"))); // NOI18N
        panelHerramientas.add(jLabel11);

        jSeparator13.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator13.setPreferredSize(new java.awt.Dimension(3, 27));
        panelHerramientas.add(jSeparator13);

        botonAlisado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectosm/iconos/alisar.png"))); // NOI18N
        botonAlisado.setToolTipText("Aplica alisado");
        botonAlisado.setMaximumSize(new java.awt.Dimension(50, 30));
        botonAlisado.setMinimumSize(new java.awt.Dimension(50, 30));
        botonAlisado.setPreferredSize(new java.awt.Dimension(50, 30));
        botonAlisado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAlisadoActionPerformed(evt);
            }
        });
        panelHerramientas.add(botonAlisado);

        jSeparator15.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator15.setPreferredSize(new java.awt.Dimension(3, 27));
        panelHerramientas.add(jSeparator15);

        botonMover.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectosm/iconos/seleccion.png"))); // NOI18N
        botonMover.setToolTipText("Modo edición");
        botonMover.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        botonMover.setMaximumSize(new java.awt.Dimension(50, 30));
        botonMover.setMinimumSize(new java.awt.Dimension(50, 30));
        botonMover.setPreferredSize(new java.awt.Dimension(50, 30));
        botonMover.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                botonMoverStateChanged(evt);
            }
        });
        botonMover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonMoverActionPerformed(evt);
            }
        });
        panelHerramientas.add(botonMover);

        jSeparator14.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator14.setPreferredSize(new java.awt.Dimension(3, 27));
        panelHerramientas.add(jSeparator14);

        botonGetFrame.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectosm/iconosVideo/Capturar.png"))); // NOI18N
        botonGetFrame.setToolTipText("Captura frame de video");
        botonGetFrame.setMaximumSize(new java.awt.Dimension(50, 30));
        botonGetFrame.setMinimumSize(new java.awt.Dimension(50, 30));
        botonGetFrame.setPreferredSize(new java.awt.Dimension(50, 30));
        botonGetFrame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGetFrameActionPerformed(evt);
            }
        });
        panelHerramientas.add(botonGetFrame);

        botonCopiarImagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectosm/iconos/copia.png"))); // NOI18N
        botonCopiarImagen.setToolTipText("Copiar Imagen");
        botonCopiarImagen.setMaximumSize(new java.awt.Dimension(50, 30));
        botonCopiarImagen.setMinimumSize(new java.awt.Dimension(50, 30));
        botonCopiarImagen.setPreferredSize(new java.awt.Dimension(50, 30));
        botonCopiarImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCopiarImagenActionPerformed(evt);
            }
        });
        panelHerramientas.add(botonCopiarImagen);

        jPanel3.add(panelHerramientas, java.awt.BorderLayout.PAGE_START);

        jPanel1.setLayout(new java.awt.BorderLayout());

        panelBarraHerramientas.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        panelBarraHerramientas.setMaximumSize(new java.awt.Dimension(950, 120));
        panelBarraHerramientas.setMinimumSize(new java.awt.Dimension(950, 120));
        panelBarraHerramientas.setName(""); // NOI18N
        panelBarraHerramientas.setPreferredSize(new java.awt.Dimension(950, 120));
        panelBarraHerramientas.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        LabelBrillo.setText("Ajustar Brillo");
        panelBarraHerramientas.add(LabelBrillo);

        sliderBrillo.setMaximum(255);
        sliderBrillo.setMinimum(-255);
        sliderBrillo.setPaintLabels(true);
        sliderBrillo.setToolTipText("Ajusta el brillo de la imagen");
        sliderBrillo.setValue(0);
        sliderBrillo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        sliderBrillo.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        sliderBrillo.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderBrilloStateChanged(evt);
            }
        });
        sliderBrillo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                sliderBrilloFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                sliderBrilloFocusLost(evt);
            }
        });
        panelBarraHerramientas.add(sliderBrillo);

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        panelBarraHerramientas.add(jSeparator3);

        jSeparator10.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator10.setPreferredSize(new java.awt.Dimension(5, 10));
        panelBarraHerramientas.add(jSeparator10);

        jLabel2.setText("Filtros");
        jLabel2.setToolTipText("Tipos de filtros para imagenes");
        panelBarraHerramientas.add(jLabel2);

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator2.setPreferredSize(new java.awt.Dimension(5, 10));
        panelBarraHerramientas.add(jSeparator2);

        comboBoxFiltros.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Media", "Binomial", "Enfoque", "Relieve", "Laplaciano" }));
        comboBoxFiltros.setToolTipText("");
        comboBoxFiltros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxFiltrosActionPerformed(evt);
            }
        });
        panelBarraHerramientas.add(comboBoxFiltros);

        jLabel3.setText("Contraste");
        panelBarraHerramientas.add(jLabel3);

        botonContraste.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectosm/iconos/contraste.png"))); // NOI18N
        botonContraste.setToolTipText("Aplica contraste");
        botonContraste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonContrasteActionPerformed(evt);
            }
        });
        panelBarraHerramientas.add(botonContraste);

        botonContrasteConIlum.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectosm/iconos/iluminar.png"))); // NOI18N
        botonContrasteConIlum.setToolTipText("Aplica contraste iluminado");
        botonContrasteConIlum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonContrasteConIlumActionPerformed(evt);
            }
        });
        panelBarraHerramientas.add(botonContrasteConIlum);

        botonContrasteConOscur.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectosm/iconos/oscurecer.png"))); // NOI18N
        botonContrasteConOscur.setToolTipText("Aplica contraste oscurecido");
        botonContrasteConOscur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonContrasteConOscurActionPerformed(evt);
            }
        });
        panelBarraHerramientas.add(botonContrasteConOscur);

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator4.setPreferredSize(new java.awt.Dimension(5, 10));
        panelBarraHerramientas.add(jSeparator4);

        jLabel4.setText("Funcion");
        panelBarraHerramientas.add(jLabel4);

        botonFSeno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectosm/iconos/sinusoidal.png"))); // NOI18N
        botonFSeno.setToolTipText("Aplica funcion seno a la imagen");
        botonFSeno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonFSenoActionPerformed(evt);
            }
        });
        panelBarraHerramientas.add(botonFSeno);

        jSeparator9.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator9.setMinimumSize(new java.awt.Dimension(10, 10));
        jSeparator9.setPreferredSize(new java.awt.Dimension(10, 10));
        panelBarraHerramientas.add(jSeparator9);

        jLabel5.setText("Rotación");
        panelBarraHerramientas.add(jLabel5);

        sliderRotacion.setMaximum(360);
        sliderRotacion.setToolTipText("Rotar imagen");
        sliderRotacion.setValue(0);
        sliderRotacion.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        sliderRotacion.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        sliderRotacion.setPreferredSize(new java.awt.Dimension(150, 30));
        sliderRotacion.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderRotacionStateChanged(evt);
            }
        });
        sliderRotacion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                sliderRotacionFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                sliderRotacionFocusLost(evt);
            }
        });
        panelBarraHerramientas.add(sliderRotacion);

        grupoGiros.add(botonRotar90);
        botonRotar90.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectosm/iconos/rotacion90.png"))); // NOI18N
        botonRotar90.setToolTipText("Rotar la imagen 90º");
        botonRotar90.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRotar90ActionPerformed(evt);
            }
        });
        panelBarraHerramientas.add(botonRotar90);

        grupoGiros.add(botonRotar180);
        botonRotar180.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectosm/iconos/rotacion180.png"))); // NOI18N
        botonRotar180.setToolTipText("Rotar la imagen 180º");
        botonRotar180.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRotar180ActionPerformed(evt);
            }
        });
        panelBarraHerramientas.add(botonRotar180);

        grupoGiros.add(botonRotar270);
        botonRotar270.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectosm/iconos/rotacion270.png"))); // NOI18N
        botonRotar270.setToolTipText("Rotar la imagen 270º");
        botonRotar270.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRotar270ActionPerformed(evt);
            }
        });
        panelBarraHerramientas.add(botonRotar270);

        jSeparator5.setOrientation(javax.swing.SwingConstants.VERTICAL);
        panelBarraHerramientas.add(jSeparator5);

        jSeparator11.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator11.setPreferredSize(new java.awt.Dimension(5, 10));
        panelBarraHerramientas.add(jSeparator11);

        jLabel6.setText("Escala");
        panelBarraHerramientas.add(jLabel6);

        botonAumentarEscala.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectosm/iconos/aumentar.png"))); // NOI18N
        botonAumentarEscala.setToolTipText("Aumentar el tamaño de la imagen");
        botonAumentarEscala.setMinimumSize(new java.awt.Dimension(39, 25));
        botonAumentarEscala.setPreferredSize(new java.awt.Dimension(39, 25));
        botonAumentarEscala.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAumentarEscalaActionPerformed(evt);
            }
        });
        panelBarraHerramientas.add(botonAumentarEscala);

        botonReducirEscala.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectosm/iconos/disminuir.png"))); // NOI18N
        botonReducirEscala.setToolTipText("Reducir el tamaño de la imagen");
        botonReducirEscala.setPreferredSize(new java.awt.Dimension(39, 25));
        botonReducirEscala.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonReducirEscalaActionPerformed(evt);
            }
        });
        panelBarraHerramientas.add(botonReducirEscala);

        jSeparator6.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator6.setMinimumSize(new java.awt.Dimension(5, 10));
        jSeparator6.setName(""); // NOI18N
        jSeparator6.setPreferredSize(new java.awt.Dimension(5, 10));
        panelBarraHerramientas.add(jSeparator6);

        jLabel7.setText("Umbralizar");
        panelBarraHerramientas.add(jLabel7);

        sliderUmbral.setMaximum(255);
        sliderUmbral.setToolTipText("Umbralizar por color o grises");
        sliderUmbral.setValue(128);
        sliderUmbral.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        sliderUmbral.setPreferredSize(new java.awt.Dimension(150, 26));
        sliderUmbral.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderUmbralStateChanged(evt);
            }
        });
        sliderUmbral.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                sliderUmbralFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                sliderUmbralFocusLost(evt);
            }
        });
        panelBarraHerramientas.add(sliderUmbral);

        jSeparator7.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator7.setPreferredSize(new java.awt.Dimension(5, 10));
        panelBarraHerramientas.add(jSeparator7);

        jLabel8.setText("Binarias");
        panelBarraHerramientas.add(jLabel8);

        jToggleButton14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectosm/iconos/aumentar.png"))); // NOI18N
        jToggleButton14.setToolTipText("No implementado");
        panelBarraHerramientas.add(jToggleButton14);

        jToggleButton15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectosm/iconos/disminuir.png"))); // NOI18N
        jToggleButton15.setToolTipText("No implementado");
        panelBarraHerramientas.add(jToggleButton15);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectosm/iconos/negativo.png"))); // NOI18N
        jButton1.setToolTipText("Negativo");
        jButton1.setMaximumSize(new java.awt.Dimension(55, 35));
        jButton1.setMinimumSize(new java.awt.Dimension(55, 35));
        jButton1.setPreferredSize(new java.awt.Dimension(55, 35));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        panelBarraHerramientas.add(jButton1);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectosm/iconos/color_a_gris.png"))); // NOI18N
        jButton2.setToolTipText("Convertir a escala de grises");
        jButton2.setMaximumSize(new java.awt.Dimension(50, 35));
        jButton2.setMinimumSize(new java.awt.Dimension(50, 35));
        jButton2.setPreferredSize(new java.awt.Dimension(50, 35));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        panelBarraHerramientas.add(jButton2);

        jPanel1.add(panelBarraHerramientas, java.awt.BorderLayout.PAGE_END);

        escritorio.setMinimumSize(new java.awt.Dimension(800, 500));
        escritorio.setName(""); // NOI18N
        jPanel1.add(escritorio, java.awt.BorderLayout.CENTER);

        jPanel3.add(jPanel1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel3, java.awt.BorderLayout.CENTER);

        menuArchivo.setText("Archivo");

        menuNuevaImagen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        menuNuevaImagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectosm/iconos/nuevo.png"))); // NOI18N
        menuNuevaImagen.setText("Nueva Imagen");
        menuNuevaImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuNuevaImagenActionPerformed(evt);
            }
        });
        menuArchivo.add(menuNuevaImagen);

        menuAbrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        menuAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectosm/iconos/abrir.png"))); // NOI18N
        menuAbrir.setText("Abrir archivo");
        menuAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAbrirActionPerformed(evt);
            }
        });
        menuArchivo.add(menuAbrir);

        menuGuardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        menuGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectosm/iconos/guardar.png"))); // NOI18N
        menuGuardar.setText("Guardar imagen");
        menuGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuGuardarActionPerformed(evt);
            }
        });
        menuArchivo.add(menuGuardar);

        menuGrabarAudio.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        menuGrabarAudio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectosm/iconosSonido/record24x24.png"))); // NOI18N
        menuGrabarAudio.setText("Grabar Audio");
        menuGrabarAudio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuGrabarAudioActionPerformed(evt);
            }
        });
        menuArchivo.add(menuGrabarAudio);

        menuAbrirWebcam.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_MASK));
        menuAbrirWebcam.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectosm/iconosVideo/Camara.png"))); // NOI18N
        menuAbrirWebcam.setText("Abrir WebCam");
        menuAbrirWebcam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAbrirWebcamActionPerformed(evt);
            }
        });
        menuArchivo.add(menuAbrirWebcam);

        jMenuBar1.add(menuArchivo);

        menuVer.setText("Ver");

        menuEstados.setText("Barra de estados");
        menuEstados.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                menuEstadosStateChanged(evt);
            }
        });
        menuEstados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEstadosActionPerformed(evt);
            }
        });
        menuVer.add(menuEstados);

        menuVerBarraHerramientas.setText("Barra de herramientas");
        menuVerBarraHerramientas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuVerBarraHerramientasActionPerformed(evt);
            }
        });
        menuVer.add(menuVerBarraHerramientas);

        menuHerramientasGraficas.setText("Barra de herramientas gráficas");
        menuHerramientasGraficas.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                menuHerramientasGraficasStateChanged(evt);
            }
        });
        menuHerramientasGraficas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuHerramientasGraficasActionPerformed(evt);
            }
        });
        menuVer.add(menuHerramientasGraficas);

        menuModoCine.setText("Ver modo Cine");
        menuModoCine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuModoCineActionPerformed(evt);
            }
        });
        menuVer.add(menuModoCine);

        jMenuBar1.add(menuVer);

        menuImagen.setText("Imagen");

        jMenuItem6.setText("Cambiar tamaño imagen");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        menuImagen.add(jMenuItem6);

        jMenuBar1.add(menuImagen);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sliderBrilloStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderBrilloStateChanged
        // TODO add your handling code here:

        VentanaInternaImagen vi; 
        vi = (VentanaInternaImagen)escritorio.getSelectedFrame();
        if (vi != null && imgSource!=null) {
            try{
                RescaleOp rop;
                if (imgSource.getColorModel().hasAlpha()){
                  float[] scales = { 1.0F, 1.0F, 1.0F, 1.0F };
                  float vBrillo = sliderBrillo.getValue();
                  float[] offsets = { vBrillo, vBrillo, vBrillo, 0.0F };
                  rop = new RescaleOp(scales, offsets, null);
                }
                else{
                  rop = new RescaleOp(1.0F, sliderBrillo.getValue(), null);
                }
                BufferedImage imgDest = rop.filter(imgSource, null);
                vi.getLienzo().setImagen(imgDest);
                vi.getLienzo().repaint();
            }catch (Exception e){
            System.err.println("Error en la operación ('" + e.getLocalizedMessage() + "')");
            }
        }

    }//GEN-LAST:event_sliderBrilloStateChanged

    private void sliderBrilloFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sliderBrilloFocusGained
        // TODO add your handling code here:
        VentanaInternaImagen vi; 
        vi = (VentanaInternaImagen)escritorio.getSelectedFrame(); 
        if (vi != null) {
            try{
            imgSource = (vi.getLienzo().getImagen());
            }catch (Exception e){
            System.err.println("Error en la operación ('" + e.getLocalizedMessage() + "')");
            }
        }  

    }//GEN-LAST:event_sliderBrilloFocusGained

    private void sliderBrilloFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sliderBrilloFocusLost

        imgSource = null;
        sliderBrillo.setValue(0);

        // TODO add your handling code here:
    }//GEN-LAST:event_sliderBrilloFocusLost
     
    private void botonContrasteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonContrasteActionPerformed
        // TODO add your handling code here
        VentanaInternaImagen vi; 
        vi = (VentanaInternaImagen)escritorio.getSelectedFrame();
        if (vi != null)
        {
            imgSource = vi.getLienzo().getImagen();
            if (imgSource != null) {
                try{ 
                int type = LookupTableProducer.TYPE_SFUNCION;
                LookupTable lt = LookupTableProducer.createLookupTable(type);
                LookupOp lop = new LookupOp(lt, null);
                // Imagen origen y destino iguales
                lop.filter( imgSource , imgSource);
                vi.repaint();
                } catch(Exception e){
                System.err.println(e.getLocalizedMessage());
                }
            }
        }
    }//GEN-LAST:event_botonContrasteActionPerformed

    private void botonAlisadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAlisadoActionPerformed
        // TODO add your handling code here:
        VentanaInternaImagen vi; 
        vi = (VentanaInternaImagen)escritorio.getSelectedFrame();
        if(botonAlisado.isSelected()){
            vi.getLienzo().setAlisar(true);
            
        }else vi.getLienzo().setAlisar(false);
        vi.getLienzo().repaint();

        
        
        
    }//GEN-LAST:event_botonAlisadoActionPerformed

    private void menuNuevaImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuNuevaImagenActionPerformed
        // TODO add your handling code here:
        
        try{
        VentanaInternaImagen vi = new VentanaInternaImagen();
        escritorio.add(vi);
        vi.setTitle("Nueva");
        vi.setVisible(true);
        BufferedImage img; 
        img = new BufferedImage(300,300,BufferedImage.TYPE_INT_RGB);
        Graphics2D    graphics = img.createGraphics();
        graphics.setPaint ( new Color ( 255,255,255 ) );
        graphics.fillRect ( 0, 0, img.getWidth(), img.getHeight() );
        vi.getLienzo().setImagen(img);}
        catch(Exception ex){
            System.err.println(ex.getLocalizedMessage());
            
        }
    }//GEN-LAST:event_menuNuevaImagenActionPerformed

    private void botonNuevaImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonNuevaImagenActionPerformed
        // TODO add your handling code here:
        try{
        VentanaInternaImagen vi = new VentanaInternaImagen();
        escritorio.add(vi);
        vi.setTitle("Nueva");
        vi.setVisible(true);
        BufferedImage img; 
        img = new BufferedImage(300,300,BufferedImage.TYPE_INT_RGB);
        Graphics2D    graphics = img.createGraphics();
        graphics.setPaint ( new Color ( 255,255,255 ) );
        graphics.fillRect ( 0, 0, img.getWidth(), img.getHeight() );
        vi.getLienzo().setImagen(img);}
        catch(Exception ex){
            System.err.println(ex.getLocalizedMessage());
            
        }
        
    }//GEN-LAST:event_botonNuevaImagenActionPerformed

    private void botonAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAbrirActionPerformed
        
        JFileChooser dlg = new JFileChooser();
        dlg.addChoosableFileFilter(new FileNameExtensionFilter("Imagenes", "jpg", "png", "bmp"));
        dlg.addChoosableFileFilter(new FileNameExtensionFilter("Video/MP3", "avi", "mp3"));
        dlg.addChoosableFileFilter(new FileNameExtensionFilter("Audio - wav/au", "wav", "au"));
        dlg.setAcceptAllFileFilterUsed(true);
        int resp = dlg.showOpenDialog(this);
        if( resp == JFileChooser.APPROVE_OPTION) {
        try{
        File f = dlg.getSelectedFile();
        error = true;
        if((f.getName().toLowerCase().endsWith(".jpg")||(f.getName().toLowerCase().endsWith(".png"))||(f.getName().toLowerCase().endsWith(".bmp")))){
            BufferedImage img = ImageIO.read(f);
            VentanaInternaImagen vi = new VentanaInternaImagen();
            vi.getLienzo().setImagen(img);
            this.escritorio.add(vi);
            vi.setTitle(f.getName());
            vi.setVisible(true);
            error = false;
        }
        if((f.getName().toLowerCase().endsWith(".wav")||(f.getName().toLowerCase().endsWith(".au")))){
            VentanaInternaReproductor vi = new VentanaInternaReproductor(f);
            this.escritorio.add(vi);
            vi.setTitle(f.getName());
            vi.setVisible(true);    
            error = false;
        }
        
        if((f.getName().toLowerCase().endsWith(".avi")||(f.getName().toLowerCase().endsWith(".mp3")))){
            VentanaInternaRVideo vi = VentanaInternaRVideo.getInstance(f);
            this.escritorio.add(vi);
            vi.setTitle(f.getName());
            vi.setVisible(true); 
            error = false;
        }        
        
        if(error){
            JOptionPane.showMessageDialog(rootPane, "Tipo de archivo no válido");//Muestra el mensaje anterior.
        }
            
        
        }catch(Exception ex){
        System.err.println("Error al leer el archivo");
        JOptionPane.showMessageDialog(rootPane, "Error al leer el archivo");//Muestra el mensaje anterior.
        }
        }
    }//GEN-LAST:event_botonAbrirActionPerformed

    private void menuAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAbrirActionPerformed
        // TODO add your handling code here:
        
        JFileChooser dlg = new JFileChooser();
        dlg.addChoosableFileFilter(new FileNameExtensionFilter("Imagenes", "jpg", "png", "bmp"));
        dlg.addChoosableFileFilter(new FileNameExtensionFilter("Video/MP3", "avi", "mp3"));
        dlg.addChoosableFileFilter(new FileNameExtensionFilter("Audio - wav/au", "wav", "au"));
        dlg.setAcceptAllFileFilterUsed(true);
        int resp = dlg.showOpenDialog(this);
        if( resp == JFileChooser.APPROVE_OPTION) {
        try{
        File f = dlg.getSelectedFile();
        error = true;
        if((f.getName().toLowerCase().endsWith(".jpg")||(f.getName().toLowerCase().endsWith(".png"))||(f.getName().toLowerCase().endsWith(".bmp")))){
            BufferedImage img = ImageIO.read(f);
            VentanaInternaImagen vi = new VentanaInternaImagen();
            vi.getLienzo().setImagen(img);
            this.escritorio.add(vi);
            vi.setTitle(f.getName());
            vi.setVisible(true);
            error = false;
        }
        if((f.getName().toLowerCase().endsWith(".wav")||(f.getName().toLowerCase().endsWith(".au")))){
            VentanaInternaReproductor vi = new VentanaInternaReproductor(f);
            this.escritorio.add(vi);
            vi.setTitle(f.getName());
            vi.setVisible(true);    
            error = false;
        }
        
        if((f.getName().toLowerCase().endsWith(".avi")||(f.getName().toLowerCase().endsWith(".mp3")))){
            VentanaInternaRVideo vi = VentanaInternaRVideo.getInstance(f);
            this.escritorio.add(vi);
            vi.setTitle(f.getName());
            vi.setVisible(true); 
            error = false;
        }        
        
        if(error){
            JOptionPane.showMessageDialog(rootPane, "Tipo de archivo no válido");//Muestra el mensaje anterior.
        }
            
        
        }catch(Exception ex){
        System.err.println("Error al leer el archivo");
        JOptionPane.showMessageDialog(rootPane, "Error al leer el archivo");//Muestra el mensaje anterior.
        }
        }

    }//GEN-LAST:event_menuAbrirActionPerformed

    private void menuGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuGuardarActionPerformed
        // TODO add your handling code here:
                VentanaInternaImagen vi; 
        vi = (VentanaInternaImagen)escritorio.getSelectedFrame();
        if (vi != null) {
            JFileChooser dlg = new JFileChooser();
            int resp = dlg.showSaveDialog(this);
            if (resp == JFileChooser.APPROVE_OPTION) {
                try {
                BufferedImage img = vi.getLienzo().getImagen(true);
                if (img != null) {
                File f = dlg.getSelectedFile();
                ImageIO.write(img, "jpg", f);
                vi.setTitle(f.getName());
                }
                }catch (Exception ex) {
                    System.err.println("Error al guardar la imagen");
                }
            }

        }
        
    }//GEN-LAST:event_menuGuardarActionPerformed

    private void botonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGuardarActionPerformed
        // TODO add your handling code here:
                VentanaInternaImagen vi; 
        vi = (VentanaInternaImagen)escritorio.getSelectedFrame();
        if (vi != null) {
            JFileChooser dlg = new JFileChooser();
            int resp = dlg.showSaveDialog(this);
            if (resp == JFileChooser.APPROVE_OPTION) {
                try {
                BufferedImage img = vi.getLienzo().getImagen(true);
                if (img != null) {
                File f = dlg.getSelectedFile();
                ImageIO.write(img, "jpg", f);
                vi.setTitle(f.getName());
                }
                }catch (Exception ex) {
                    System.err.println("Error al guardar la imagen");
                }
            }

        }
    }//GEN-LAST:event_botonGuardarActionPerformed

    private void botonPuntoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonPuntoActionPerformed
        // TODO add your handling code here:
        VentanaInternaImagen vi; 
        vi = (VentanaInternaImagen)escritorio.getSelectedFrame();
        try{
        vi.getLienzo().setFormaActiva(0);
        LabelEstado.setText("Lapiz");
        vi.setCursor(getPredefinedCursor(Cursor.CROSSHAIR_CURSOR));
        }catch (Exception ex) {
                    System.err.println("Error, no se puede pintar sin lienzo");
            
        }
        
        
    }//GEN-LAST:event_botonPuntoActionPerformed

    private void botonLineaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonLineaActionPerformed
        // TODO add your handling code here:
        try{
        VentanaInternaImagen vi; 
        vi = (VentanaInternaImagen)escritorio.getSelectedFrame();
        vi.getLienzo().setFormaActiva(1);
        LabelEstado.setText("Linea");  
        vi.setCursor(getPredefinedCursor(Cursor.CROSSHAIR_CURSOR));
        }catch (Exception ex) {
                    System.err.println("Error, no se puede pintar sin lienzo");
            
        }
    }//GEN-LAST:event_botonLineaActionPerformed

    private void botonRectanguloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRectanguloActionPerformed
        // TODO add your handling code here:
        try{
        VentanaInternaImagen vi; 
        vi = (VentanaInternaImagen)escritorio.getSelectedFrame();
        vi.getLienzo().setFormaActiva(2);
        LabelEstado.setText("Rectangulo");
        vi.setCursor(getPredefinedCursor(Cursor.CROSSHAIR_CURSOR));
        }catch (Exception ex) {
                    System.err.println("Error, no se puede pintar sin lienzo");
            
        }
    }//GEN-LAST:event_botonRectanguloActionPerformed

    private void botonCirculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCirculoActionPerformed
        // TODO add your handling code here:     
        try{
        VentanaInternaImagen vi; 
        vi = (VentanaInternaImagen)escritorio.getSelectedFrame();
        vi.getLienzo().setFormaActiva(3);
        LabelEstado.setText("Ovalo");
        vi.setCursor(getPredefinedCursor(Cursor.CROSSHAIR_CURSOR));
        }catch (Exception ex) {
                    System.err.println("Error, no se puede pintar sin lienzo");
            
        }
    }//GEN-LAST:event_botonCirculoActionPerformed

    private void botonGomaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGomaActionPerformed
        // TODO add your handling code here:
        try{
        VentanaInternaImagen vi; 
        vi = (VentanaInternaImagen)escritorio.getSelectedFrame();
        vi.getLienzo().setBorrar(true);  
        vi.getLienzo().repaint();
        LabelEstado.setText("Goma");
        }catch (Exception ex) {
                    System.err.println("Error, no se puede pintar sin lienzo");
            
        }
    }//GEN-LAST:event_botonGomaActionPerformed

    private void botonNegroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonNegroActionPerformed
        // TODO add your handling code here:
        
        try{
        VentanaInternaImagen vi; 
        vi = (VentanaInternaImagen)escritorio.getSelectedFrame();
        vi.getLienzo().setColor(Color.BLACK);
        vi.getLienzo().repaint();
        }catch (Exception ex) {
                    System.err.println("Error, no se puede pintar sin lienzo");
            
        }
    }//GEN-LAST:event_botonNegroActionPerformed

    private void botonBlancoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBlancoActionPerformed
        // TODO add your handling code here:
        try{
        VentanaInternaImagen vi; 
        vi = (VentanaInternaImagen)escritorio.getSelectedFrame();
        vi.getLienzo().setColor(Color.WHITE);
        vi.getLienzo().repaint();
        }catch (Exception ex) {
                    System.err.println("Error, no se puede pintar sin lienzo");
            
        }        
        
        
    }//GEN-LAST:event_botonBlancoActionPerformed

    private void botonRojoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRojoActionPerformed
        // TODO add your handling code here:
        try{
        VentanaInternaImagen vi; 
        vi = (VentanaInternaImagen)escritorio.getSelectedFrame();
        vi.getLienzo().setColor(Color.RED);
        vi.getLienzo().repaint();
        }catch (Exception ex) {
                    System.err.println("Error, no se puede pintar sin lienzo");
            
        }        
        
        
    }//GEN-LAST:event_botonRojoActionPerformed

    private void botonAmarilloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAmarilloActionPerformed
        // TODO add your handling code here:
        try{
        VentanaInternaImagen vi; 
        vi = (VentanaInternaImagen)escritorio.getSelectedFrame();
        vi.getLienzo().setColor(Color.YELLOW);
        vi.getLienzo().repaint();
        }catch (Exception ex) {
                    System.err.println("Error, no se puede pintar sin lienzo");
            
        }
        
    }//GEN-LAST:event_botonAmarilloActionPerformed

    private void botonAzulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAzulActionPerformed
        // TODO add your handling code here:
        try{
        VentanaInternaImagen vi; 
        vi = (VentanaInternaImagen)escritorio.getSelectedFrame();
        vi.getLienzo().setColor(Color.BLUE);
        vi.getLienzo().repaint();
        }catch (Exception ex) {
                    System.err.println("Error, no se puede pintar sin lienzo");
            
        }        
    }//GEN-LAST:event_botonAzulActionPerformed

    private void botonVerdeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonVerdeActionPerformed
        // TODO add your handling code here:
        try{
        VentanaInternaImagen vi; 
        vi = (VentanaInternaImagen)escritorio.getSelectedFrame();
        vi.getLienzo().setColor(Color.GREEN);
        vi.getLienzo().repaint();
        }catch (Exception ex) {
                    System.err.println("Error, no se puede pintar sin lienzo");
            
        }        
    }//GEN-LAST:event_botonVerdeActionPerformed

    private void botonRosaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRosaActionPerformed
        // TODO add your handling code here:
        
        try{
        VentanaInternaImagen vi; 
        vi = (VentanaInternaImagen)escritorio.getSelectedFrame();
        vi.getLienzo().setColor(Color.PINK);
        vi.getLienzo().repaint();
        }catch (Exception ex) {
                    System.err.println("Error, no se puede pintar sin lienzo");
            
        }
    }//GEN-LAST:event_botonRosaActionPerformed

    private void comboBoxFiltrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxFiltrosActionPerformed
        // TODO add your handling code here:
        VentanaInternaImagen vi; 
        vi = (VentanaInternaImagen)escritorio.getSelectedFrame();
        if (vi != null)
        {
            imgSource = vi.getLienzo().getImagen();
            if (imgSource != null) {
                try{
                    Kernel k = KernelProducer.createKernel(comboBoxFiltros.getSelectedIndex());
                    ConvolveOp operacionConvol = new ConvolveOp(k, 1, null);
                    BufferedImage imgDest = operacionConvol.filter(imgSource, null);
                    vi.getLienzo().setImagen(imgDest);
                    vi.getLienzo().repaint();
                }
                catch (Exception e){
                    System.err.println("Error en la operación ('" + e.getLocalizedMessage() + "')");
                }
            }
        }

    }//GEN-LAST:event_comboBoxFiltrosActionPerformed

    private void botonContrasteConIlumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonContrasteConIlumActionPerformed
        // TODO add your handling code here:
                VentanaInternaImagen vi; 
        vi = (VentanaInternaImagen)escritorio.getSelectedFrame();
        if (vi != null)
        {
            imgSource = vi.getLienzo().getImagen();
            if (imgSource != null) {
                try{ 
                int type = LookupTableProducer.TYPE_ROOT;
                LookupTable lt = LookupTableProducer.createLookupTable(type);
                LookupOp lop = new LookupOp(lt, null);
                // Imagen origen y destino iguales
                lop.filter( imgSource , imgSource);
                vi.repaint();
                } catch(Exception e){
                System.err.println(e.getLocalizedMessage());
                }
            }
        }
        
        
    }//GEN-LAST:event_botonContrasteConIlumActionPerformed

    private void botonContrasteConOscurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonContrasteConOscurActionPerformed
        // TODO add your handling code here:
               VentanaInternaImagen vi; 
        vi = (VentanaInternaImagen)escritorio.getSelectedFrame();
        if (vi != null)
        {
            imgSource = vi.getLienzo().getImagen();
            if (imgSource != null) {
                try{ 
                int type = LookupTableProducer.TYPE_POWER;
                LookupTable lt = LookupTableProducer.createLookupTable(type);
                LookupOp lop = new LookupOp(lt, null);
                // Imagen origen y destino iguales
                lop.filter( imgSource , imgSource);
                vi.repaint();
                } catch(Exception e){
                System.err.println(e.getLocalizedMessage());
                }
            }
        }
        
        
    }//GEN-LAST:event_botonContrasteConOscurActionPerformed

    private void botonRotar180ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRotar180ActionPerformed
        // TODO add your handling code here:
        VentanaInternaImagen vi; 
        vi = (VentanaInternaImagen)escritorio.getSelectedFrame();
        if (vi != null)
        {
            imgSource = vi.getLienzo().getImagen();
            if (imgSource != null){
                try{
                rotar(Math.toRadians(180),imgSource);
                } catch(Exception e){
                System.err.println(e.getLocalizedMessage());
                }
            }
        }
        
        
    }//GEN-LAST:event_botonRotar180ActionPerformed
  private void rotar(double gradoRadianes, BufferedImage imgSource)
  {
        VentanaInternaImagen vi; 
        vi = (VentanaInternaImagen)escritorio.getSelectedFrame();
        if (vi != null)
        {
            imgSource = vi.getLienzo().getImagen();
            if (imgSource != null) {
        try
        {
        
        double r = Math.toRadians(180);
        Point p = new Point(imgSource.getWidth()/2, imgSource.getHeight()/2);
        AffineTransform at = AffineTransform.getRotateInstance(r,p.x,p.y);
        AffineTransformOp atop;
        atop = new AffineTransformOp(at,AffineTransformOp.TYPE_BILINEAR);
        BufferedImage imgdest = atop.filter(imgSource, null);    
            
            
         /*   
        //Rota sin desformar la imagen pero se pierde por el lienzo     
        int x = (this.getWidth()- imgSource.getWidth()) / 2;
        int y = (this.getHeight() - imgSource.getHeight()) / 2;
        AffineTransform at = new AffineTransform();
        at.setToRotation(gradoRadianes, x + (imgSource.getWidth() / 2), y + (imgSource.getHeight() / 2));
        at.translate(x, y);    

        AffineTransformOp atop;
        atop = new AffineTransformOp(at,AffineTransformOp.TYPE_BILINEAR);
        BufferedImage imgdest = atop.filter(imgSource, null);
        */
        vi.getLienzo().setImagen(imgdest);
        vi.getLienzo().repaint();
        }
        catch (Exception e)
        {
          System.err.println("Error en la operación ('" + e.getLocalizedMessage() + "')");
        }
      }
    }
  }


    private void botonFSenoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonFSenoActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        VentanaInternaImagen vi; 
        vi = (VentanaInternaImagen)escritorio.getSelectedFrame();
        if (vi != null)
        {
            imgSource = vi.getLienzo().getImagen();
            if (imgSource != null) {
                try{ 
                int type = SenoLookupTableProducer.TYPE_SENO;
                LookupTable lt = SenoLookupTableProducer.createLookupTable(type);
                LookupOp lop = new LookupOp(lt, null);
                // Imagen origen y destino iguales
                lop.filter( imgSource , imgSource);
                vi.repaint();
                } catch(Exception e){
                System.err.println(e.getLocalizedMessage());
                }
            }
        }
    
    
  
        
        
    }//GEN-LAST:event_botonFSenoActionPerformed

    private void botonRotar90ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRotar90ActionPerformed
        // TODO add your handling code here:
        VentanaInternaImagen vi; 
        vi = (VentanaInternaImagen)escritorio.getSelectedFrame();
        if (vi != null)
        {
            imgSource = vi.getLienzo().getImagen();
            if (imgSource != null){
                try{
                rotar(Math.toRadians(90),imgSource);
                } catch(Exception e){
                System.err.println(e.getLocalizedMessage());
                }
            }
        }
        
        
    }//GEN-LAST:event_botonRotar90ActionPerformed

    private void botonRotar270ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRotar270ActionPerformed
        // TODO add your handling code here:
        VentanaInternaImagen vi; 
        vi = (VentanaInternaImagen)escritorio.getSelectedFrame();
        if (vi != null)
        {
            imgSource = vi.getLienzo().getImagen();
            if (imgSource != null){
                try{
                rotar(Math.toRadians(270),imgSource);
                } catch(Exception e){
                System.err.println(e.getLocalizedMessage());
                }
            }
        }
        
        
    }//GEN-LAST:event_botonRotar270ActionPerformed

    private void botonMoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonMoverActionPerformed
        // TODO add your handling code here:
        VentanaInternaImagen vi; 
        vi = (VentanaInternaImagen)escritorio.getSelectedFrame();
        if(!botonMover.isSelected()){
            vi.setCursor(getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            vi.getLienzo().setEditar(false);
           
        }else{
            vi.getLienzo().setEditar(true);
            vi.setCursor(getPredefinedCursor(Cursor.MOVE_CURSOR));
        } 
        repaint();
    }//GEN-LAST:event_botonMoverActionPerformed

    private void botonMoverStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_botonMoverStateChanged
        // TODO add your handling code here:

       

    }//GEN-LAST:event_botonMoverStateChanged

    private void SpinnerGrosorStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SpinnerGrosorStateChanged
        // TODO add your handling code here:
        
        
        VentanaInternaImagen vi = (VentanaInternaImagen)this.escritorio.getSelectedFrame();
        if (vi != null) {
            vi.getLienzo().setTrazo((int) this.SpinnerGrosor.getValue());
        }
        repaint();
    }//GEN-LAST:event_SpinnerGrosorStateChanged

    private void sliderRotacionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sliderRotacionFocusGained
        // TODO add your handling code here:
        VentanaInternaImagen vi; 
        vi = (VentanaInternaImagen)escritorio.getSelectedFrame();
        if (vi != null)
        {
            imgSource = vi.getLienzo().getImagen();
            
        }
        
        
    }//GEN-LAST:event_sliderRotacionFocusGained

    private void sliderRotacionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sliderRotacionFocusLost
        // TODO add your handling code here:
            imgSource = null;
            sliderRotacion.setValue(0);  
        
    }//GEN-LAST:event_sliderRotacionFocusLost

    private void sliderRotacionStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderRotacionStateChanged
        // TODO add your handling code here:
        
        if (imgSource != null){
                try{
                rotar(Math.toRadians(sliderRotacion.getValue()),imgSource);
                } catch(Exception e){
                System.err.println(e.getLocalizedMessage());
                }
            }
        
    }//GEN-LAST:event_sliderRotacionStateChanged

    private void botonAumentarEscalaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAumentarEscalaActionPerformed
        // TODO add your handling code here:
        
        VentanaInternaImagen vi; 
        vi = (VentanaInternaImagen)escritorio.getSelectedFrame();
        if (vi != null)
        {
            imgSource = vi.getLienzo().getImagen();
            if (imgSource != null) {
                try{ 
                    BufferedImage imgdest = null;
                    AffineTransform tx = new AffineTransform();
                    tx.scale(1.05,1.05);

                    AffineTransformOp op = new AffineTransformOp(tx,AffineTransformOp.TYPE_BILINEAR);
                    imgdest = op.filter(imgSource, null);
                    vi.getLienzo().setImagen(imgdest);
                    vi.getLienzo().repaint();
                } catch(Exception e){
                System.err.println(e.getLocalizedMessage());
                }
            }
        }
        
        
        

    }//GEN-LAST:event_botonAumentarEscalaActionPerformed

    private void botonReducirEscalaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonReducirEscalaActionPerformed
        // TODO add your handling code here:
              
        VentanaInternaImagen vi; 
        vi = (VentanaInternaImagen)escritorio.getSelectedFrame();
        if (vi != null)
        {
            imgSource = vi.getLienzo().getImagen();
            if (imgSource != null) {
                try{ 
                    BufferedImage imgdest = null;
                    AffineTransform tx = new AffineTransform();
                    tx.scale(0.95,0.95);

                    AffineTransformOp op = new AffineTransformOp(tx,AffineTransformOp.TYPE_BILINEAR);
                    imgdest = op.filter(imgSource, null);
                    vi.getLienzo().setImagen(imgdest);
                    vi.getLienzo().repaint();
                } catch(Exception e){
                System.err.println(e.getLocalizedMessage());
                }
            }
        }
        
        
        
    }//GEN-LAST:event_botonReducirEscalaActionPerformed

    private void menuGrabarAudioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuGrabarAudioActionPerformed
        // TODO add your handling code here:
        JFileChooser dlg = new JFileChooser();
        dlg.addChoosableFileFilter(new FileNameExtensionFilter("Audio - wav/au", "wav", "au"));
        int resp = dlg.showOpenDialog(this);
        if( resp == JFileChooser.APPROVE_OPTION) {
        try{
        File f = dlg.getSelectedFile(); 
        VentanaInternaGrabador vi = new VentanaInternaGrabador(f);
        this.escritorio.add(vi);
        vi.setTitle(f.getName());
        vi.setVisible(true);
        }catch(Exception ex){
        System.err.println("Error al guardar audio");
        }
        }
    }//GEN-LAST:event_menuGrabarAudioActionPerformed

    private void menuAbrirWebcamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAbrirWebcamActionPerformed
        // TODO add your handling code here:
        try{
        VentanaInternaWebCam vi = VentanaInternaWebCam.getInstance();
        if(vi!=null){
        this.escritorio.add(vi);
        vi.setVisible(true);
        }
        }catch(Exception ex){
        System.err.println("Error webcam");
        }
        
        
    }//GEN-LAST:event_menuAbrirWebcamActionPerformed

    private void botonGetFrameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGetFrameActionPerformed
        // TODO add your handling code here:
        
        VentanaInternaImagen Imagen = new VentanaInternaImagen();
        JInternalFrame vi; 
        vi = escritorio.getSelectedFrame();
        try{  
        if(((VentanaInternaRVideo)vi) instanceof VentanaInternaRVideo){
            Imagen.getLienzo().setImagen(this.getFrame(((VentanaInternaRVideo)vi).getPlayer()));
            Imagen.setTitle("Captura Video");
        }
        /*if(((VentanaInternaWebCam)vi) instanceof VentanaInternaWebCam){
            //Imagen.getLienzo().setImagen(this.getFrame((VentanaInternaWebCam)vi).getMiPlayer());
            Imagen.setTitle("Captura WebCam");
        }    */   
        
        
        this.escritorio.add(Imagen);
        Imagen.setVisible(true);
        
        }catch(Exception ex){
        System.err.println("Error e:"+ex);
        }
        
    }//GEN-LAST:event_botonGetFrameActionPerformed

    private void botonCopiarImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCopiarImagenActionPerformed
        // TODO add your handling code here:
        VentanaInternaImagen Imagen = new VentanaInternaImagen();
        JInternalFrame vi; 
        vi = escritorio.getSelectedFrame();
        try{
            
            
        if(((VentanaInternaImagen)vi) instanceof VentanaInternaImagen){
            BufferedImage img = ((VentanaInternaImagen)vi).getLienzo().getImagen();
            Imagen.getLienzo().setImagen(img);
            Imagen.setTitle("Copia de "+vi.getTitle());
            Imagen.setLocation(20, 20);
        }             
            
       // if(((VentanaInternaRVideo)vi) instanceof VentanaInternaRVideo){
       //     Imagen.getLienzo().setImagen(this.getFrame(((VentanaInternaRVideo)vi).getPlayer()));
       // }

        
        
        this.escritorio.add(Imagen);
        Imagen.setVisible(true);
        
        }catch(Exception ex){
        System.err.println("Error e:"+ex);
        }
    }//GEN-LAST:event_botonCopiarImagenActionPerformed

    private void botonRellenoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRellenoActionPerformed
        // TODO add your handling code here:        VentanaInternaImagen vi; 
        VentanaInternaImagen vi;
        vi = (VentanaInternaImagen)escritorio.getSelectedFrame();
        if(botonRelleno.isSelected())
            vi.getLienzo().setRelleno(true);
        else
            vi.getLienzo().setRelleno(false);
            
        vi.getLienzo().repaint();
        
    }//GEN-LAST:event_botonRellenoActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
        
        
        dialogoResize.setVisible(true);
   /* Lienzo2DImagen lienzo = null;
    BufferedImage img = null;
    VentanaInternaImagen vi = (VentanaInternaImagen)this.escritorio.getSelectedFrame();
    if (vi != null)
    {
      lienzo = vi.getLienzo();
      img = lienzo.getImagen();
      if (img != null)
      {
        this.imgAncho = img.getWidth();
        this.imgAlto = img.getHeight();
      }
    }
    SetSizeImagen dlg = new SetSizeImagen(this, this.imgAncho, this.imgAlto);
    dlg.showDialog();
    int resp =1;
    if ((resp == 1) || (resp == 2))
    {
      this.imgAncho = dlg.getAncho();
      this.imgAlto = dlg.getAlto();
      if ((vi != null) && 
        (img != null))
      {
        BufferedImage imgOut = new BufferedImage(this.imgAncho, this.imgAlto, 1);
        Graphics2D g2D = imgOut.createGraphics();
        g2D.setPaint(Color.WHITE);
        g2D.fillRect(0, 0, this.imgAncho, this.imgAlto);
        if (resp == 2)
        {
          g2D.drawImage(img, 0, 0, this.imgAncho, this.imgAlto, null);
        }
        else
        {
          g2D.drawImage(img, 0, 0, null);
        }
        lienzo.setImagen(imgOut);
        lienzo.repaint();
      }
    
  }
        
        
     */   
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void botonRellenoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_botonRellenoStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_botonRellenoStateChanged

    private void botonGradienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGradienteActionPerformed


// TODO add your handling code here:
        VentanaInternaImagen vi;
        vi = (VentanaInternaImagen)escritorio.getSelectedFrame();
        if(botonGradiente.isSelected()){
            vi.getLienzo().setGradiente(true);
            this.botonNegro.setSelected(false);
            this.botonRojo.setSelected(false);
            this.botonAmarillo.setSelected(false);
            this.botonAzul.setSelected(false);
            this.botonBlanco.setSelected(false);
            this.botonVerde.setSelected(false);
        }    
        else
            vi.getLienzo().setGradiente(false);
            
        vi.getLienzo().repaint();
        

        
        
        
        
    }//GEN-LAST:event_botonGradienteActionPerformed

    private void botonTexturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonTexturaActionPerformed
        // TODO add your handling code here:
        VentanaInternaImagen vi;
        vi = (VentanaInternaImagen)escritorio.getSelectedFrame();
        JFileChooser dlg = new JFileChooser();
        dlg.addChoosableFileFilter(new FileNameExtensionFilter("Imagenes", "jpg", "png", "bmp"));        
        int resp = dlg.showOpenDialog(this);
        error=true;
        if( resp == JFileChooser.APPROVE_OPTION) 
        try{
        File f = dlg.getSelectedFile(); 
            if((f.getName().toLowerCase().endsWith(".jpg")||(f.getName().toLowerCase().endsWith(".png"))||(f.getName().toLowerCase().endsWith(".bmp")))){
                BufferedImage img = ImageIO.read(f);
                vi.getLienzo().setImg(img);
                error=false;
            }
            if(error){
                JOptionPane.showMessageDialog(rootPane, "Tipo de archivo no válido");
            }
        }
        
        catch(Exception ex){
        System.err.println("Error e:"+ex);
        }
          
    }//GEN-LAST:event_botonTexturaActionPerformed

    private void botonTexturaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_botonTexturaStateChanged
        VentanaInternaImagen vi;
        vi = (VentanaInternaImagen)escritorio.getSelectedFrame();
       
        try{
            if(!botonTextura.isSelected())
                vi.getLienzo().setImg(null);
            }
        
        
        catch(Exception ex){
        System.err.println("Error e:"+ex);
        }
        

// TODO add your handling code here:
    }//GEN-LAST:event_botonTexturaStateChanged

    private void botonSelectorColoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSelectorColoresActionPerformed
        // TODO add your handling code here:
        VentanaInternaImagen vi;
        vi = (VentanaInternaImagen)escritorio.getSelectedFrame();
        try{
        JColorChooser ventanaDeColores=new JColorChooser();
        Color c=ventanaDeColores.showDialog(null, "Seleccione un Color", Color.gray);
        
        

        
   

                vi.getLienzo().setColor(c);
            
        }
        
        catch(Exception ex){
        System.err.println("Error e:"+ex);
        }
        
        
    }//GEN-LAST:event_botonSelectorColoresActionPerformed

    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed
        // TODO add your handling code here:
        try{
        VentanaInternaImagen vi; 
        vi = (VentanaInternaImagen)escritorio.getSelectedFrame();
        vi.getLienzo().setFormaActiva(4);
        LabelEstado.setText("Rectangulo Redondeado");
        }catch (Exception ex) {
                    System.err.println("Error, no se puede pintar sin lienzo");
        }
        
        
        
    }//GEN-LAST:event_jToggleButton2ActionPerformed

    private void menuEstadosStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_menuEstadosStateChanged

        
    }//GEN-LAST:event_menuEstadosStateChanged

    private void menuHerramientasGraficasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuHerramientasGraficasActionPerformed
        // TODO add your handling code here:
        if(panelBarraHerramientas.isVisible()){
            panelBarraHerramientas.setVisible(false);
        }else{
            panelBarraHerramientas.setVisible(true);
        }
    }//GEN-LAST:event_menuHerramientasGraficasActionPerformed

    private void menuHerramientasGraficasStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_menuHerramientasGraficasStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_menuHerramientasGraficasStateChanged

    private void menuEstadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEstadosActionPerformed
        // TODO add your handling code here:

        if(LabelEstado.isVisible()){
            LabelEstado.setVisible(false);
        }else{
            LabelEstado.setVisible(true);
        }
        
    }//GEN-LAST:event_menuEstadosActionPerformed

    private void menuModoCineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuModoCineActionPerformed
        // TODO add your handling code here:
        if(LabelEstado.isVisible()){
            LabelEstado.setVisible(false);
        }else{
            LabelEstado.setVisible(true);
        }
        if(panelBarraHerramientas.isVisible()){
            panelBarraHerramientas.setVisible(false);
        }else{
            panelBarraHerramientas.setVisible(true);
        }
        if(panelHerramientas.isVisible()){
            panelHerramientas.setVisible(false);
        }else{
            panelHerramientas.setVisible(true);
        }
        JInternalFrame vi; 
        vi = escritorio.getSelectedFrame();
         if(((VentanaInternaRVideo)vi) instanceof VentanaInternaRVideo){
            try {
                vi.setMaximum(true);
            } catch (Exception ex) {
                System.err.println("Error");
            }
        }
        
    }//GEN-LAST:event_menuModoCineActionPerformed

    private void menuVerBarraHerramientasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuVerBarraHerramientasActionPerformed
        // TODO add your handling code here:
        if(panelHerramientas.isVisible()){
            panelHerramientas.setVisible(false);
        }else{
            panelHerramientas.setVisible(true);
        }
    }//GEN-LAST:event_menuVerBarraHerramientasActionPerformed

    public BufferedImage aplicarFiltroNegativo(BufferedImage imgsel) {
        BufferedImage bi = null;
            if (imgsel != null) {
            bi = new BufferedImage(imgsel.getWidth(), imgsel.getHeight(),imgsel.getType());
                for (int x = 0; x < imgsel.getWidth(); x++) {
                    for (int y = 0; y < imgsel.getHeight(); y++) {
                        Color c = new Color(imgsel.getRGB(x, y));
                        int r = c.getRed();
                        int g = c.getGreen();
                        int b = c.getBlue();
                        r=255-r;
                        g=255-g;
                        b=255-b;
                        bi.setRGB(x, y, new Color(r, g, b).getRGB());
                    }
                }
            }
        return bi;
    }
    
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        VentanaInternaImagen vi; 
        vi = (VentanaInternaImagen)escritorio.getSelectedFrame();
        if (vi != null)
        {
            imgSource = vi.getLienzo().getImagen();
            if (imgSource != null) {
                try{
                BufferedImage bf = null;
                bf = aplicarFiltroNegativo(imgSource);
                vi.getLienzo().setImagen(bf);
                vi.repaint();
                } catch(Exception e){
                System.err.println(e.getLocalizedMessage());
                }
            }
        }
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    
  public BufferedImage aplicarFiltroGris(BufferedImage imgsel){
        int mediaPixel,colorSRGB;
        Color colorAux;
                 
        //Recorremos la imagen píxel a píxel
        for( int i = 0; i < imgsel.getWidth(); i++ ){
            for( int j = 0; j < imgsel.getHeight(); j++ ){
                //Almacenamos el color del píxel
                colorAux=new Color(imgsel.getRGB(i, j));
                //Calculamos la media de los tres canales (rojo, verde, azul)
                mediaPixel=(int)((colorAux.getRed()+colorAux.getGreen()+colorAux.getBlue())/3);
                //Cambiamos a formato sRGB
                colorSRGB=(mediaPixel << 16) | (mediaPixel << 8) | mediaPixel;
                //Asignamos el nuevo valor al BufferedImage
                imgsel.setRGB(i, j,colorSRGB);
            }
        }
        //Retornamos la imagen
        return imgsel;
    }

    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
            VentanaInternaImagen vi; 
        vi = (VentanaInternaImagen)escritorio.getSelectedFrame();
        if (vi != null)
        {
            imgSource = vi.getLienzo().getImagen();
            if (imgSource != null) {
                try{
                BufferedImage bf = null;
                bf = aplicarFiltroGris(imgSource);
                vi.getLienzo().setImagen(bf);
                vi.repaint();
                } catch(Exception e){
                System.err.println(e.getLocalizedMessage());
                }
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void sliderUmbralFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sliderUmbralFocusGained
        VentanaInternaImagen vi; 
        vi = (VentanaInternaImagen)escritorio.getSelectedFrame(); 
        if (vi != null) {
            try{
            imgSource = (vi.getLienzo().getImagen());
            }catch (Exception e){
            System.err.println("Error en la operación ('" + e.getLocalizedMessage() + "')");
            }
        }  
    }//GEN-LAST:event_sliderUmbralFocusGained

    private void sliderUmbralFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sliderUmbralFocusLost

        // TODO add your handling code here:
        imgSource = null;
        sliderUmbral.setValue(0);
        
    }//GEN-LAST:event_sliderUmbralFocusLost

    private void sliderUmbralStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderUmbralStateChanged

        // TODO add your handling code here:
        VentanaInternaImagen vi; 
        vi = (VentanaInternaImagen)escritorio.getSelectedFrame();
        if (vi != null && imgSource!=null) {
            try{
                Color colorAux;
                int rgbNuevo;
                BufferedImage imgDest = new BufferedImage(imgSource.getWidth(),imgSource.getHeight(),BufferedImage.TYPE_INT_RGB);
                for( int i = 0; i < imgSource.getWidth(); i++ ){
                    for( int j = 0; j < imgSource.getHeight(); j++ ){
                        colorAux=new Color(imgSource.getRGB(i, j));
                        
                        
                        int r = colorAux.getRed();
                        int g = colorAux.getGreen();
                        int b = colorAux.getBlue();
                        
                        rgbNuevo = (r+g+b)/3;
                        if(rgbNuevo >= sliderUmbral.getValue()){
                            imgDest.setRGB(i, j,0);      
                        }
                        else{
                            imgDest.setRGB(i,j,colorAux.getRGB());
                        }
                        
                    }
                 
                }
                
                
                vi.getLienzo().setImagen(imgDest);
                vi.getLienzo().repaint();
            }catch (Exception e){
            System.err.println("Error en la operación ('" + e.getLocalizedMessage() + "')");
            }
        }        
    }//GEN-LAST:event_sliderUmbralStateChanged

    private void botonAnguloGradActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAnguloGradActionPerformed
    VentanaInternaImagen vi;
        vi = (VentanaInternaImagen)escritorio.getSelectedFrame();
        if(botonAnguloGrad.isSelected())
            vi.getLienzo().setAngulo(true);
        else
            vi.getLienzo().setAngulo(false);
            
        vi.getLienzo().repaint();

    }//GEN-LAST:event_botonAnguloGradActionPerformed

    private void botonSelectorColores1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSelectorColores1ActionPerformed
        // TODO add your handling code here:
 VentanaInternaImagen vi;
        vi = (VentanaInternaImagen)escritorio.getSelectedFrame();
        try{
        JColorChooser ventanaDeColores=new JColorChooser();
        Color c=ventanaDeColores.showDialog(null, "Seleccione un Color", Color.gray);
        
        

        
   

                vi.getLienzo().setColorUno(c);
            
        }
        
        catch(Exception ex){
        System.err.println("Error e:"+ex);
        }        
        
    }//GEN-LAST:event_botonSelectorColores1ActionPerformed

    private void botonSelectorColores2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSelectorColores2ActionPerformed
        // TODO add your handling code here:
 VentanaInternaImagen vi;
        vi = (VentanaInternaImagen)escritorio.getSelectedFrame();
        try{
        JColorChooser ventanaDeColores=new JColorChooser();
        Color c=ventanaDeColores.showDialog(null, "Seleccione un Color", Color.gray);
        
        

        
   

                vi.getLienzo().setColorDos(c);
            
        }
        
        catch(Exception ex){
        System.err.println("Error e:"+ex);
        }        
    }//GEN-LAST:event_botonSelectorColores2ActionPerformed

    private void sliderTransparenciaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderTransparenciaStateChanged
        VentanaInternaImagen vi; 
        vi = (VentanaInternaImagen)escritorio.getSelectedFrame();
        if (vi != null) {
            try{
                
                vi.getLienzo().setTransparenciaGradual((float)sliderTransparencia.getValue()/10);
                
            }catch (Exception e){
            System.err.println("Error en la operación ('" + e.getLocalizedMessage() + "')");
            }
        }
    }//GEN-LAST:event_sliderTransparenciaStateChanged

    private void sliderTransparenciaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sliderTransparenciaFocusGained

    }//GEN-LAST:event_sliderTransparenciaFocusGained

    private void sliderTransparenciaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sliderTransparenciaFocusLost
       
    }//GEN-LAST:event_sliderTransparenciaFocusLost

    private void jToggleButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton4ActionPerformed
        VentanaInternaImagen vi = (VentanaInternaImagen)this.escritorio.getSelectedFrame();
        if (vi != null) {
            vi.getLienzo().setTipoTrazo(1);
        }
        repaint();
        
    }//GEN-LAST:event_jToggleButton4ActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        VentanaInternaImagen vi = (VentanaInternaImagen)this.escritorio.getSelectedFrame();
        if (vi != null) {
            vi.getLienzo().setTipoTrazo(2);
        }
        repaint();
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jToggleButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton3ActionPerformed
        VentanaInternaImagen vi = (VentanaInternaImagen)this.escritorio.getSelectedFrame();
        if (vi != null) {
            vi.getLienzo().setTipoTrazo(3);
        }
        repaint();
    }//GEN-LAST:event_jToggleButton3ActionPerformed

    private void botonLineaCurvaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonLineaCurvaActionPerformed
        try{
        VentanaInternaImagen vi; 
        vi = (VentanaInternaImagen)escritorio.getSelectedFrame();
        vi.getLienzo().setFormaActiva(5);
        LabelEstado.setText("Linea Curva");   
        vi.setCursor(getPredefinedCursor(Cursor.CROSSHAIR_CURSOR));
        }catch (Exception ex) {
                    System.err.println("Error, no se puede pintar sin lienzo");
            
        }
        
    }//GEN-LAST:event_botonLineaCurvaActionPerformed

    private void jToggleButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton5ActionPerformed
        // TODO add your handling code here:
        VentanaInternaImagen vi; 
        vi = (VentanaInternaImagen)escritorio.getSelectedFrame();
        try{
        vi.getLienzo().setFormaActiva(6);
        LabelEstado.setText("Poligono Estrellado");
        vi.setCursor(getPredefinedCursor(Cursor.CROSSHAIR_CURSOR));
        }catch (Exception ex) {
                    System.err.println("Error, no se puede pintar sin lienzo");
            
        }
    }//GEN-LAST:event_jToggleButton5ActionPerformed

    private void jToggleButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton6ActionPerformed
        VentanaInternaImagen vi; 
        vi = (VentanaInternaImagen)escritorio.getSelectedFrame();
        try{
        vi.getLienzo().setFormaActiva(7);
        LabelEstado.setText("Trazo Libre");
        vi.setCursor(getPredefinedCursor(Cursor.CROSSHAIR_CURSOR));
        }catch (Exception ex) {
                    System.err.println("Error, no se puede pintar sin lienzo");
            
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jToggleButton6ActionPerformed

    private void jToggleButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton7ActionPerformed
           // TODO add your handling code here:
        
        String vAlto = jTextField1.getText();
        int alto= Integer.parseInt(vAlto);
        String vAncho = jTextField2.getText();
        int ancho= Integer.parseInt(vAncho);
        
        
         VentanaInternaImagen vi; 
        vi = (VentanaInternaImagen)escritorio.getSelectedFrame(); 
        if (vi != null) {
        BufferedImage img; 
        img = new BufferedImage(ancho,alto,BufferedImage.TYPE_INT_RGB);
        Graphics2D    graphics = img.createGraphics();
        graphics.setPaint ( new Color ( 255,255,255 ) );
        graphics.fillRect ( 0, 0, img.getWidth(), img.getHeight() );
        vi.getLienzo().setImagen(img);
        repaint();
        
        dialogoResize.setVisible(false);
        }
        
        
        
        //int ancho = Integer.parseInt(valorAncho);
        
        
    }//GEN-LAST:event_jToggleButton7ActionPerformed

    private void botonRectanguloStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_botonRectanguloStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_botonRectanguloStateChanged
    public BufferedImage getFrame(Player player){ 
        FrameGrabbingControl fgc; 
        String claseCtr = "javax.media.control.FrameGrabbingControl";
        fgc = (FrameGrabbingControl)player.getControl(claseCtr );
        Buffer bufferFrame = fgc.grabFrame();
        BufferToImage bti;
        bti=new BufferToImage((VideoFormat)bufferFrame.getFormat());
        Image img = bti.createImage(bufferFrame);
        return (BufferedImage)img;
}
    
    
    /**
     * 
     */

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LabelBrillo;
    private javax.swing.JLabel LabelEstado;
    private javax.swing.JSpinner SpinnerGrosor;
    private javax.swing.JButton botonAbrir;
    private javax.swing.JToggleButton botonAlisado;
    private javax.swing.JToggleButton botonAmarillo;
    private javax.swing.JToggleButton botonAnguloGrad;
    private javax.swing.JToggleButton botonAumentarEscala;
    private javax.swing.JToggleButton botonAzul;
    private javax.swing.JToggleButton botonBlanco;
    private javax.swing.JToggleButton botonCirculo;
    private javax.swing.JToggleButton botonContraste;
    private javax.swing.JToggleButton botonContrasteConIlum;
    private javax.swing.JToggleButton botonContrasteConOscur;
    private javax.swing.JButton botonCopiarImagen;
    private javax.swing.JToggleButton botonFSeno;
    private javax.swing.JButton botonGetFrame;
    private javax.swing.JToggleButton botonGoma;
    private javax.swing.JToggleButton botonGradiente;
    private javax.swing.JButton botonGuardar;
    private javax.swing.JToggleButton botonLinea;
    private javax.swing.JToggleButton botonLineaCurva;
    private javax.swing.JToggleButton botonMover;
    private javax.swing.JToggleButton botonNegro;
    private javax.swing.JButton botonNuevaImagen;
    private javax.swing.JToggleButton botonPunto;
    private javax.swing.JToggleButton botonRectangulo;
    private javax.swing.JToggleButton botonReducirEscala;
    private javax.swing.JToggleButton botonRelleno;
    private javax.swing.JToggleButton botonRojo;
    private javax.swing.JToggleButton botonRosa;
    private javax.swing.JToggleButton botonRotar180;
    private javax.swing.JToggleButton botonRotar270;
    private javax.swing.JToggleButton botonRotar90;
    private javax.swing.JToggleButton botonSelectorColores;
    private javax.swing.JToggleButton botonSelectorColores1;
    private javax.swing.JToggleButton botonSelectorColores2;
    private javax.swing.JToggleButton botonTextura;
    private javax.swing.JToggleButton botonVerde;
    private javax.swing.JComboBox comboBoxFiltros;
    private javax.swing.JDialog dialogoResize;
    private javax.swing.JDesktopPane escritorio;
    private javax.swing.ButtonGroup grupoColores;
    private javax.swing.ButtonGroup grupoGiros;
    private javax.swing.ButtonGroup grupoHerramientas;
    private javax.swing.ButtonGroup grupoTipoLinea;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator12;
    private javax.swing.JSeparator jSeparator13;
    private javax.swing.JSeparator jSeparator14;
    private javax.swing.JSeparator jSeparator15;
    private javax.swing.JSeparator jSeparator16;
    private javax.swing.JSeparator jSeparator17;
    private javax.swing.JSeparator jSeparator18;
    private javax.swing.JSeparator jSeparator19;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator20;
    private javax.swing.JSeparator jSeparator21;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton14;
    private javax.swing.JToggleButton jToggleButton15;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JToggleButton jToggleButton3;
    private javax.swing.JToggleButton jToggleButton4;
    private javax.swing.JToggleButton jToggleButton5;
    private javax.swing.JToggleButton jToggleButton6;
    private javax.swing.JToggleButton jToggleButton7;
    private javax.swing.JMenuItem menuAbrir;
    private javax.swing.JMenuItem menuAbrirWebcam;
    private javax.swing.JMenu menuArchivo;
    private javax.swing.JMenuItem menuEstados;
    private javax.swing.JMenuItem menuGrabarAudio;
    private javax.swing.JMenuItem menuGuardar;
    private javax.swing.JMenuItem menuHerramientasGraficas;
    private javax.swing.JMenu menuImagen;
    private javax.swing.JMenuItem menuModoCine;
    private javax.swing.JMenuItem menuNuevaImagen;
    private javax.swing.JMenu menuVer;
    private javax.swing.JMenuItem menuVerBarraHerramientas;
    private javax.swing.JPanel panelBarraHerramientas;
    private javax.swing.JPanel panelHerramientas;
    private javax.swing.JSlider sliderBrillo;
    private javax.swing.JSlider sliderRotacion;
    private javax.swing.JSlider sliderTransparencia;
    private javax.swing.JSlider sliderUmbral;
    // End of variables declaration//GEN-END:variables
}
